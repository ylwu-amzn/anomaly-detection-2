name: Build and Test Anomaly detection
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

env:
  ## TODO: remove these two hard code versions below after GA release
  DOCKER_TAG: 1.0.0-rc1
  PLUGIN_VERSION: 1.0.0.0-rc1

jobs:

  Build-ad:
    strategy:
      matrix:
        java: [14]

    name: Build and Test Anomaly detection Plugin
    runs-on: ubuntu-latest

    steps:
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      # anomaly-detection
      - name: Checkout AD
        uses: actions/checkout@v2

      # dependencies: OpenSearch
      - name: Checkout OpenSearch
        uses: actions/checkout@v2
        with:
          repository: 'opensearch-project/OpenSearch'
          path: OpenSearch
          ref: '1.0'
      - name: Build OpenSearch
        working-directory: ./OpenSearch
        run: ./gradlew publishToMavenLocal -Dbuild.version_qualifier=rc1 -Dbuild.snapshot=false

      # dependencies: common-utils
      - name: Checkout common-utils
        uses: actions/checkout@v2
        with:
          ref: 'main' # TODO: update to the right branch name once it's ready. e.g. 1.x
          repository: 'opensearch-project/common-utils'
          path: common-utils
      - name: Build common-utils
        working-directory: ./common-utils
        run: ./gradlew publishToMavenLocal -Dopensearch.version=1.0.0-rc1

      # dependencies: job-scheduler
      - name: Checkout job-scheduler
        uses: actions/checkout@v2
        with:
          ref: 'main' # TODO: update to the right branch name once it's ready. e.g. 1.x
          repository: 'opensearch-project/job-scheduler'
          path: job-scheduler

      - name: Build job-scheduler
        working-directory: ./job-scheduler
        run: ./gradlew publishToMavenLocal -Dopensearch.version=1.0.0-rc1 -Dbuild.snapshot=false
      - name: Assemble job-scheduler
        working-directory: ./job-scheduler
        run: |
          ./gradlew assemble -Dopensearch.version=1.0.0-rc1 -Dbuild.snapshot=false
          echo "Creating ../src/test/resources/job-scheduler ..."
          mkdir -p ../src/test/resources/job-scheduler
          pwd
          echo "Copying ./build/distributions/*.zip to ../src/test/resources/job-scheduler ..."
          ls ./build/distributions/
          cp ./build/distributions/*.zip ../src/test/resources/job-scheduler
          echo "Copied ./build/distributions/*.zip to ../src/test/resources/job-scheduler ..."
          ls ../src/test/resources/job-scheduler

      - name: Build and Run Tests
        run: |
          ./gradlew build -Dopensearch.version=1.0.0-rc1

      - name: Publish to Maven Local
        run: |
          ./gradlew publishToMavenLocal -Dopensearch.version=1.0.0-rc1

      - name: Multi Nodes Integration Testing
        run: |
          ./gradlew integTest  -PnumNodes=3

      - name: Pull and Run Docker
        run: |
          ## plugin=`ls build/distributions/*.zip`
          ## version=`echo $plugin|awk -F- '{print $4}'| cut -d. -f 1-3`
          ## plugin_version=`echo $plugin|awk -F- '{print $4}'| cut -d. -f 1-4`
          echo $DOCKER_TAG
          echo "---------------- start to pull docker image $DOCKER_TAG"
          cd ..
          if docker pull opensearchstaging/opensearch:$DOCKER_TAG
          then
            echo "FROM opensearchstaging/opensearch:$DOCKER_TAG" >> Dockerfile
            echo "RUN if [ -d /usr/share/opensearch/plugins/opensearch-anomaly-detection ]; then /usr/share/opensearch/bin/opensearch-plugin remove opensearch-anomaly-detection; fi" >> Dockerfile
            echo "ADD anomaly-detection-2/build/distributions/opensearch-anomaly-detection-$PLUGIN_VERSION.zip /tmp/" >> Dockerfile
            echo "RUN /usr/share/opensearch/bin/opensearch-plugin install --batch file:/tmp/opensearch-anomaly-detection-$PLUGIN_VERSION.zip" >> Dockerfile
            docker build -t opensearch-ad:test .
            docker run -p 9200:9200 -d -p 9600:9600 -e "discovery.type=single-node" opensearch-ad:test
            sleep 90
            echo "imagePresent=true" >> $GITHUB_ENV
          else
            echo "imagePresent=false" >> $GITHUB_ENV
          fi

      - name: Run AD Test
        if: env.imagePresent == 'true'
        run: |
          security=`curl -XGET https://localhost:9200/_cat/plugins?v -u admin:admin --insecure |grep opensearch-security|wc -l`
          if [ $security -gt 0 ]
          then
            echo "Security plugin is available"
            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername="docker-cluster" -Dhttps=true -Duser=admin -Dpassword=admin
            ## Test security disabled
            echo "securityEnabled=true" >> $GITHUB_ENV
          else
            echo "Security plugin is NOT available"
            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername="docker-cluster"
            echo "securityEnabled=false" >> $GITHUB_ENV
          fi

      - name: Pull and Run Docker with security disabled
        if: env.securityEnabled == 'true'
        run: |
          echo $DOCKER_TAG
          if docker pull opensearchstaging/opensearch:$DOCKER_TAG
          then
            echo "FROM opensearchstaging/opensearch:$version" >> Dockerfile-security-disabled
            echo "RUN sed -n -i '1,/Start OpenSearch Security Demo Configuration/p;/End OpenSearch Security Demo Configuration/,\$p'" >> Dockerfile-security-disabled
            truncate -s -1 Dockerfile
            echo -n " /usr/share/opensearch/config/opensearch.yml" >> Dockerfile-security-disabled
            docker build -t opensearch-ad:test .
            docker run -p 9200:9200 -d -p 9600:9600 -e "discovery.type=single-node" opensearch-ad:test
            sleep 90
            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername="docker-cluster"
          fi

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v1
        with:
          file: ./build/reports/jacoco/test/jacocoTestReport.xml
          flags: plugin
